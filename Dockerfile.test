# Multi-distribution Docker testing environment for customzsh
# Supports Ubuntu, Debian, Fedora, and Arch Linux

ARG BASE_IMAGE=ubuntu:latest
FROM ${BASE_IMAGE}

# Build arguments for package manager detection
ARG PKG_MANAGER
ARG DISTRO_NAME

# Set environment variables for non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Create test user for realistic testing environment
RUN if command -v useradd >/dev/null 2>&1; then \
        useradd -m -s /bin/bash testuser; \
    elif command -v adduser >/dev/null 2>&1; then \
        adduser -D -s /bin/bash testuser; \
    fi

# Install system dependencies based on package manager
RUN set -e; \
    if [ "$PKG_MANAGER" = "apt-get" ] || [ -f /etc/debian_version ]; then \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            git curl sudo jq zsh wget ca-certificates \
            build-essential procps && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/*; \
    elif [ "$PKG_MANAGER" = "dnf" ] || [ -f /etc/redhat-release ]; then \
        dnf update -y && \
        dnf install -y \
            git curl sudo jq zsh wget ca-certificates \
            gcc make procps-ng && \
        dnf clean all; \
    elif [ "$PKG_MANAGER" = "pacman" ] || [ -f /etc/arch-release ]; then \
        pacman -Syu --noconfirm && \
        pacman -S --noconfirm \
            git curl sudo jq zsh wget ca-certificates \
            base-devel procps-ng && \
        pacman -Scc --noconfirm; \
    else \
        echo "Unsupported package manager: $PKG_MANAGER" && exit 1; \
    fi

# Give testuser sudo privileges
RUN echo "testuser ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/testuser && \
    chmod 0440 /etc/sudoers.d/testuser

# Switch to test user
USER testuser
WORKDIR /home/testuser

# Copy project files to user's home directory
COPY --chown=testuser:testuser . /home/testuser/customzsh
WORKDIR /home/testuser/customzsh

# Install bats-core testing framework if not already present
RUN if [ ! -d "tests/bats" ]; then \
        git clone https://github.com/bats-core/bats-core.git tests/bats; \
    fi

# Ensure bats is executable and install it
RUN cd tests/bats && \
    sudo ./install.sh /usr/local

# Make scripts executable
RUN chmod +x customzsh.sh install_eza.sh run_tests.sh

# Set up test environment
ENV HOME=/home/testuser
ENV USER=testuser

# Health check to verify environment
RUN git --version && \
    curl --version && \
    jq --version && \
    zsh --version && \
    bats --version

# Default command runs the comprehensive test suite including new tests
CMD ["./run_tests.sh", "--suite", "all"]

# Labels for metadata
LABEL maintainer="customzsh"
LABEL description="Docker testing environment for customzsh project"
LABEL version="1.0"